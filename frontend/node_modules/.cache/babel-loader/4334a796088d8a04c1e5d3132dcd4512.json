{"ast":null,"code":"import _objectSpread from \"/home/agam/Desktop/zense/trial_POOLIIIT/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/agam/Desktop/zense/trial_POOLIIIT/frontend/src/components/booking-form.js\";\nimport React from 'react';\nimport { Form, DatePicker, TimePicker, Button } from 'antd';\n\nclass TimeRelatedForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, fieldsValue) => {\n        if (err) {\n          return;\n        } // Should format date value before submit.\n\n\n        const values = _objectSpread({}, fieldsValue, {\n          'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n          'time-picker': fieldsValue['time-picker'].format('HH:mm:ss')\n        });\n\n        console.log('Received values of form: ', values);\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Please select time!'\n      }]\n    };\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, getFieldDecorator('date-picker', config)(React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, getFieldDecorator('time-picker', config)(React.createElement(TimePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Flexibility Before\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, getFieldDecorator('time-picker', config)(React.createElement(TimePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Flexibilty After\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, getFieldDecorator('time-picker', config)(React.createElement(TimePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst Booking = Form.create({\n  name: 'time_related_controls'\n})(TimeRelatedForm);\nexport default Booking;","map":{"version":3,"sources":["/home/agam/Desktop/zense/trial_POOLIIIT/frontend/src/components/booking-form.js"],"names":["React","Form","DatePicker","TimePicker","Button","TimeRelatedForm","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","fieldsValue","values","format","console","log","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","config","rules","type","required","message","offset","Booking","create","name"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Form, DatePicker, TimePicker, Button } from 'antd';\n\nclass TimeRelatedForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.form.validateFields((err, fieldsValue) => {\n      if (err) {\n        return;\n      }\n\n      // Should format date value before submit.\n      const values = {\n        ...fieldsValue,\n        'date-picker': fieldsValue['date-picker'].format('YYYY-MM-DD'),\n        'time-picker': fieldsValue['time-picker'].format('HH:mm:ss'),\n      };\n      console.log('Received values of form: ', values);\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const config = {\n      rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n    };\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"Date\">\n          {getFieldDecorator('date-picker', config)(<DatePicker />)}\n        </Form.Item>\n        \n        <Form.Item label=\"Time\">\n          {getFieldDecorator('time-picker', config)(<TimePicker />)}\n        </Form.Item>\n        <Form.Item label=\"Flexibility Before\">\n          {getFieldDecorator('time-picker', config)(<TimePicker />)}\n        </Form.Item>\n        <Form.Item label=\"Flexibilty After\">\n          {getFieldDecorator('time-picker', config)(<TimePicker />)}\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            xs: { span: 24, offset: 0 },\n            sm: { span: 16, offset: 8 },\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst Booking = Form.create({ name: 'time_related_controls' })(TimeRelatedForm);\n\nexport default Booking;"]},"metadata":{},"sourceType":"module"}